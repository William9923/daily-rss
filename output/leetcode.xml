<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>LeetCode Daily Challenge</title>
    <link>https://william9923.github.io/daily-rss/output/leetcode.xml</link>
    <description>Daily coding challenge from LeetCode</description>
    <atom:link href="https://william9923.github.io/daily-rss/output/leetcode.xml" rel="self"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <language>en</language>
    <lastBuildDate>Tue, 06 May 2025 02:48:32 +0000</lastBuildDate>
    <item>
      <title>Build Array from Permutation</title>
      <link>https://leetcode.com/problems/build-array-from-permutation/</link>
      <description>&lt;p&gt;Given a &lt;strong&gt;zero-based permutation&lt;/strong&gt; &lt;code&gt;nums&lt;/code&gt; (&lt;strong&gt;0-indexed&lt;/strong&gt;), build an array &lt;code&gt;ans&lt;/code&gt; of the &lt;strong&gt;same length&lt;/strong&gt; where &lt;code&gt;ans[i] = nums[nums[i]]&lt;/code&gt; for each &lt;code&gt;0 &amp;lt;= i &amp;lt; nums.length&lt;/code&gt; and return it.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;zero-based permutation&lt;/strong&gt; &lt;code&gt;nums&lt;/code&gt; is an array of &lt;strong&gt;distinct&lt;/strong&gt; integers from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;nums.length - 1&lt;/code&gt; (&lt;strong&gt;inclusive&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong class="example"&gt;Example 1:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;
&lt;strong&gt;Input:&lt;/strong&gt; nums = [0,2,1,5,3,4]
&lt;strong&gt;Output:&lt;/strong&gt; [0,1,2,4,5,3]&lt;strong&gt;
Explanation:&lt;/strong&gt; The array ans is built as follows: 
ans = [nums[nums[0]], nums[nums[1]], nums[nums[2]], nums[nums[3]], nums[nums[4]], nums[nums[5]]]
    = [nums[0], nums[2], nums[1], nums[5], nums[3], nums[4]]
    = [0,1,2,4,5,3]&lt;/pre&gt;

&lt;p&gt;&lt;strong class="example"&gt;Example 2:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;
&lt;strong&gt;Input:&lt;/strong&gt; nums = [5,0,1,2,3,4]
&lt;strong&gt;Output:&lt;/strong&gt; [4,5,0,1,2,3]
&lt;strong&gt;Explanation:&lt;/strong&gt; The array ans is built as follows:
ans = [nums[nums[0]], nums[nums[1]], nums[nums[2]], nums[nums[3]], nums[nums[4]], nums[nums[5]]]
    = [nums[5], nums[0], nums[1], nums[2], nums[3], nums[4]]
    = [4,5,0,1,2,3]&lt;/pre&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Constraints:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;code&gt;1 &amp;lt;= nums.length &amp;lt;= 1000&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;0 &amp;lt;= nums[i] &amp;lt; nums.length&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;The elements in &lt;code&gt;nums&lt;/code&gt; are &lt;strong&gt;distinct&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Follow-up:&lt;/strong&gt; Can you solve it without using an extra space (i.e., &lt;code&gt;O(1)&lt;/code&gt; memory)?&lt;/p&gt;
</description>
      <content:encoded><![CDATA[<p>Given a <strong>zero-based permutation</strong> <code>nums</code> (<strong>0-indexed</strong>), build an array <code>ans</code> of the <strong>same length</strong> where <code>ans[i] = nums[nums[i]]</code> for each <code>0 &lt;= i &lt; nums.length</code> and return it.</p>

<p>A <strong>zero-based permutation</strong> <code>nums</code> is an array of <strong>distinct</strong> integers from <code>0</code> to <code>nums.length - 1</code> (<strong>inclusive</strong>).</p>

<p>&nbsp;</p>
<p><strong class="example">Example 1:</strong></p>

<pre>
<strong>Input:</strong> nums = [0,2,1,5,3,4]
<strong>Output:</strong> [0,1,2,4,5,3]<strong>
Explanation:</strong> The array ans is built as follows: 
ans = [nums[nums[0]], nums[nums[1]], nums[nums[2]], nums[nums[3]], nums[nums[4]], nums[nums[5]]]
    = [nums[0], nums[2], nums[1], nums[5], nums[3], nums[4]]
    = [0,1,2,4,5,3]</pre>

<p><strong class="example">Example 2:</strong></p>

<pre>
<strong>Input:</strong> nums = [5,0,1,2,3,4]
<strong>Output:</strong> [4,5,0,1,2,3]
<strong>Explanation:</strong> The array ans is built as follows:
ans = [nums[nums[0]], nums[nums[1]], nums[nums[2]], nums[nums[3]], nums[nums[4]], nums[nums[5]]]
    = [nums[5], nums[0], nums[1], nums[2], nums[3], nums[4]]
    = [4,5,0,1,2,3]</pre>

<p>&nbsp;</p>
<p><strong>Constraints:</strong></p>

<ul>
	<li><code>1 &lt;= nums.length &lt;= 1000</code></li>
	<li><code>0 &lt;= nums[i] &lt; nums.length</code></li>
	<li>The elements in <code>nums</code> are <strong>distinct</strong>.</li>
</ul>

<p>&nbsp;</p>
<p><strong>Follow-up:</strong> Can you solve it without using an extra space (i.e., <code>O(1)</code> memory)?</p>
]]></content:encoded>
      <guid isPermaLink="false">build-array-from-permutation</guid>
      <pubDate>Tue, 06 May 2025 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>
