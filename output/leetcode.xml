<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>LeetCode Daily Challenge</title>
    <link>https://william9923.github.io/daily-rss/output/leetcode.xml</link>
    <description>Daily coding challenge from LeetCode</description>
    <atom:link href="https://william9923.github.io/daily-rss/output/leetcode.xml" rel="self"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <language>en</language>
    <lastBuildDate>Thu, 15 May 2025 01:11:08 +0000</lastBuildDate>
    <item>
      <title>Longest Unequal Adjacent Groups Subsequence I</title>
      <link>https://leetcode.com/problems/longest-unequal-adjacent-groups-subsequence-i/</link>
      <description>&lt;p&gt;You are given a string array &lt;code&gt;words&lt;/code&gt; and a &lt;strong&gt;binary&lt;/strong&gt; array &lt;code&gt;groups&lt;/code&gt; both of length &lt;code&gt;n&lt;/code&gt;, where &lt;code&gt;words[i]&lt;/code&gt; is associated with &lt;code&gt;groups[i]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Your task is to select the &lt;strong&gt;longest alternating&lt;/strong&gt; &lt;span data-keyword="subsequence-array"&gt;subsequence&lt;/span&gt; from &lt;code&gt;words&lt;/code&gt;. A subsequence of &lt;code&gt;words&lt;/code&gt; is alternating if for any two consecutive strings in the sequence, their corresponding elements in the binary array &lt;code&gt;groups&lt;/code&gt; differ. Essentially, you are to choose strings such that adjacent elements have non-matching corresponding bits in the &lt;code&gt;groups&lt;/code&gt; array.&lt;/p&gt;

&lt;p&gt;Formally, you need to find the longest subsequence of an array of indices &lt;code&gt;[0, 1, ..., n - 1]&lt;/code&gt; denoted as &lt;code&gt;[i&lt;sub&gt;0&lt;/sub&gt;, i&lt;sub&gt;1&lt;/sub&gt;, ..., i&lt;sub&gt;k-1&lt;/sub&gt;]&lt;/code&gt;, such that &lt;code&gt;groups[i&lt;sub&gt;j&lt;/sub&gt;] != groups[i&lt;sub&gt;j+1&lt;/sub&gt;]&lt;/code&gt; for each &lt;code&gt;0 &amp;lt;= j &amp;lt; k - 1&lt;/code&gt; and then find the words corresponding to these indices.&lt;/p&gt;

&lt;p&gt;Return &lt;em&gt;the selected subsequence. If there are multiple answers, return &lt;strong&gt;any&lt;/strong&gt; of them.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The elements in &lt;code&gt;words&lt;/code&gt; are distinct.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong class="example"&gt;Example 1:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="example-block" style="
    border-color: var(--border-tertiary);
    border-left-width: 2px;
    color: var(--text-secondary);
    font-size: .875rem;
    margin-bottom: 1rem;
    margin-top: 1rem;
    overflow: visible;
    padding-left: 1rem;
"&gt;
&lt;p&gt;&lt;strong&gt;Input:&lt;/strong&gt; &lt;span class="example-io" style="
    font-family: Menlo,sans-serif;
    font-size: 0.85rem;
"&gt;words = [&amp;quot;e&amp;quot;,&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;], groups = [0,0,1]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt; &lt;span class="example-io" style="
    font-family: Menlo,sans-serif;
    font-size: 0.85rem;
"&gt;[&amp;quot;e&amp;quot;,&amp;quot;b&amp;quot;]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; A subsequence that can be selected is &lt;code&gt;[&amp;quot;e&amp;quot;,&amp;quot;b&amp;quot;]&lt;/code&gt; because &lt;code&gt;groups[0] != groups[2]&lt;/code&gt;. Another subsequence that can be selected is &lt;code&gt;[&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;]&lt;/code&gt; because &lt;code&gt;groups[1] != groups[2]&lt;/code&gt;. It can be demonstrated that the length of the longest subsequence of indices that satisfies the condition is &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong class="example"&gt;Example 2:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="example-block" style="
    border-color: var(--border-tertiary);
    border-left-width: 2px;
    color: var(--text-secondary);
    font-size: .875rem;
    margin-bottom: 1rem;
    margin-top: 1rem;
    overflow: visible;
    padding-left: 1rem;
"&gt;
&lt;p&gt;&lt;strong&gt;Input:&lt;/strong&gt; &lt;span class="example-io" style="
    font-family: Menlo,sans-serif;
    font-size: 0.85rem;
"&gt;words = [&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;,&amp;quot;c&amp;quot;,&amp;quot;d&amp;quot;], groups = [1,0,1,1]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt; &lt;span class="example-io" style="
    font-family: Menlo,sans-serif;
    font-size: 0.85rem;
"&gt;[&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;,&amp;quot;c&amp;quot;]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; A subsequence that can be selected is &lt;code&gt;[&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;,&amp;quot;c&amp;quot;]&lt;/code&gt; because &lt;code&gt;groups[0] != groups[1]&lt;/code&gt; and &lt;code&gt;groups[1] != groups[2]&lt;/code&gt;. Another subsequence that can be selected is &lt;code&gt;[&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;,&amp;quot;d&amp;quot;]&lt;/code&gt; because &lt;code&gt;groups[0] != groups[1]&lt;/code&gt; and &lt;code&gt;groups[1] != groups[3]&lt;/code&gt;. It can be shown that the length of the longest subsequence of indices that satisfies the condition is &lt;code&gt;3&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Constraints:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;code&gt;1 &amp;lt;= n == words.length == groups.length &amp;lt;= 100&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;1 &amp;lt;= words[i].length &amp;lt;= 10&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;groups[i]&lt;/code&gt; is either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1.&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;words&lt;/code&gt; consists of &lt;strong&gt;distinct&lt;/strong&gt; strings.&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;words[i]&lt;/code&gt; consists of lowercase English letters.&lt;/li&gt;
&lt;/ul&gt;
</description>
      <content:encoded><![CDATA[<p>You are given a string array <code>words</code> and a <strong>binary</strong> array <code>groups</code> both of length <code>n</code>, where <code>words[i]</code> is associated with <code>groups[i]</code>.</p>

<p>Your task is to select the <strong>longest alternating</strong> <span data-keyword="subsequence-array">subsequence</span> from <code>words</code>. A subsequence of <code>words</code> is alternating if for any two consecutive strings in the sequence, their corresponding elements in the binary array <code>groups</code> differ. Essentially, you are to choose strings such that adjacent elements have non-matching corresponding bits in the <code>groups</code> array.</p>

<p>Formally, you need to find the longest subsequence of an array of indices <code>[0, 1, ..., n - 1]</code> denoted as <code>[i<sub>0</sub>, i<sub>1</sub>, ..., i<sub>k-1</sub>]</code>, such that <code>groups[i<sub>j</sub>] != groups[i<sub>j+1</sub>]</code> for each <code>0 &lt;= j &lt; k - 1</code> and then find the words corresponding to these indices.</p>

<p>Return <em>the selected subsequence. If there are multiple answers, return <strong>any</strong> of them.</em></p>

<p><strong>Note:</strong> The elements in <code>words</code> are distinct.</p>

<p>&nbsp;</p>
<p><strong class="example">Example 1:</strong></p>

<div class="example-block" style="
    border-color: var(--border-tertiary);
    border-left-width: 2px;
    color: var(--text-secondary);
    font-size: .875rem;
    margin-bottom: 1rem;
    margin-top: 1rem;
    overflow: visible;
    padding-left: 1rem;
">
<p><strong>Input:</strong> <span class="example-io" style="
    font-family: Menlo,sans-serif;
    font-size: 0.85rem;
">words = [&quot;e&quot;,&quot;a&quot;,&quot;b&quot;], groups = [0,0,1]</span></p>

<p><strong>Output:</strong> <span class="example-io" style="
    font-family: Menlo,sans-serif;
    font-size: 0.85rem;
">[&quot;e&quot;,&quot;b&quot;]</span></p>

<p><strong>Explanation:</strong> A subsequence that can be selected is <code>[&quot;e&quot;,&quot;b&quot;]</code> because <code>groups[0] != groups[2]</code>. Another subsequence that can be selected is <code>[&quot;a&quot;,&quot;b&quot;]</code> because <code>groups[1] != groups[2]</code>. It can be demonstrated that the length of the longest subsequence of indices that satisfies the condition is <code>2</code>.</p>
</div>

<p><strong class="example">Example 2:</strong></p>

<div class="example-block" style="
    border-color: var(--border-tertiary);
    border-left-width: 2px;
    color: var(--text-secondary);
    font-size: .875rem;
    margin-bottom: 1rem;
    margin-top: 1rem;
    overflow: visible;
    padding-left: 1rem;
">
<p><strong>Input:</strong> <span class="example-io" style="
    font-family: Menlo,sans-serif;
    font-size: 0.85rem;
">words = [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;], groups = [1,0,1,1]</span></p>

<p><strong>Output:</strong> <span class="example-io" style="
    font-family: Menlo,sans-serif;
    font-size: 0.85rem;
">[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]</span></p>

<p><strong>Explanation:</strong> A subsequence that can be selected is <code>[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]</code> because <code>groups[0] != groups[1]</code> and <code>groups[1] != groups[2]</code>. Another subsequence that can be selected is <code>[&quot;a&quot;,&quot;b&quot;,&quot;d&quot;]</code> because <code>groups[0] != groups[1]</code> and <code>groups[1] != groups[3]</code>. It can be shown that the length of the longest subsequence of indices that satisfies the condition is <code>3</code>.</p>
</div>

<p>&nbsp;</p>
<p><strong>Constraints:</strong></p>

<ul>
	<li><code>1 &lt;= n == words.length == groups.length &lt;= 100</code></li>
	<li><code>1 &lt;= words[i].length &lt;= 10</code></li>
	<li><code>groups[i]</code> is either <code>0</code> or <code>1.</code></li>
	<li><code>words</code> consists of <strong>distinct</strong> strings.</li>
	<li><code>words[i]</code> consists of lowercase English letters.</li>
</ul>
]]></content:encoded>
      <guid isPermaLink="false">longest-unequal-adjacent-groups-subsequence-i</guid>
      <pubDate>Thu, 15 May 2025 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>
