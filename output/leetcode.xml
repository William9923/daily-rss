<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>LeetCode Daily Challenge</title>
    <link>https://william9923.github.io/daily-rss/output/leetcode.xml</link>
    <description>Daily coding challenge from LeetCode</description>
    <atom:link href="https://william9923.github.io/daily-rss/output/leetcode.xml" rel="self"/>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <language>en</language>
    <lastBuildDate>Wed, 07 May 2025 01:13:02 +0000</lastBuildDate>
    <item>
      <title>Find Minimum Time to Reach Last Room I</title>
      <link>https://leetcode.com/problems/find-minimum-time-to-reach-last-room-i/</link>
      <description>&lt;p&gt;There is a dungeon with &lt;code&gt;n x m&lt;/code&gt; rooms arranged as a grid.&lt;/p&gt;

&lt;p&gt;You are given a 2D array &lt;code&gt;moveTime&lt;/code&gt; of size &lt;code&gt;n x m&lt;/code&gt;, where &lt;code&gt;moveTime[i][j]&lt;/code&gt; represents the &lt;strong&gt;minimum&lt;/strong&gt; time in seconds when you can &lt;strong&gt;start moving&lt;/strong&gt; to that room. You start from the room &lt;code&gt;(0, 0)&lt;/code&gt; at time &lt;code&gt;t = 0&lt;/code&gt; and can move to an &lt;strong&gt;adjacent&lt;/strong&gt; room. Moving between adjacent rooms takes &lt;em&gt;exactly&lt;/em&gt; one second.&lt;/p&gt;

&lt;p&gt;Return the &lt;strong&gt;minimum&lt;/strong&gt; time to reach the room &lt;code&gt;(n - 1, m - 1)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Two rooms are &lt;strong&gt;adjacent&lt;/strong&gt; if they share a common wall, either &lt;em&gt;horizontally&lt;/em&gt; or &lt;em&gt;vertically&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong class="example"&gt;Example 1:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="example-block"&gt;
&lt;p&gt;&lt;strong&gt;Input:&lt;/strong&gt; &lt;span class="example-io"&gt;moveTime = [[0,4],[4,4]]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt; &lt;span class="example-io"&gt;6&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The minimum time required is 6 seconds.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;At time &lt;code&gt;t == 4&lt;/code&gt;, move from room &lt;code&gt;(0, 0)&lt;/code&gt; to room &lt;code&gt;(1, 0)&lt;/code&gt; in one second.&lt;/li&gt;
	&lt;li&gt;At time &lt;code&gt;t == 5&lt;/code&gt;, move from room &lt;code&gt;(1, 0)&lt;/code&gt; to room &lt;code&gt;(1, 1)&lt;/code&gt; in one second.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong class="example"&gt;Example 2:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="example-block"&gt;
&lt;p&gt;&lt;strong&gt;Input:&lt;/strong&gt; &lt;span class="example-io"&gt;moveTime = [[0,0,0],[0,0,0]]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt; &lt;span class="example-io"&gt;3&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The minimum time required is 3 seconds.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;At time &lt;code&gt;t == 0&lt;/code&gt;, move from room &lt;code&gt;(0, 0)&lt;/code&gt; to room &lt;code&gt;(1, 0)&lt;/code&gt; in one second.&lt;/li&gt;
	&lt;li&gt;At time &lt;code&gt;t == 1&lt;/code&gt;, move from room &lt;code&gt;(1, 0)&lt;/code&gt; to room &lt;code&gt;(1, 1)&lt;/code&gt; in one second.&lt;/li&gt;
	&lt;li&gt;At time &lt;code&gt;t == 2&lt;/code&gt;, move from room &lt;code&gt;(1, 1)&lt;/code&gt; to room &lt;code&gt;(1, 2)&lt;/code&gt; in one second.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong class="example"&gt;Example 3:&lt;/strong&gt;&lt;/p&gt;

&lt;div class="example-block"&gt;
&lt;p&gt;&lt;strong&gt;Input:&lt;/strong&gt; &lt;span class="example-io"&gt;moveTime = [[0,1],[1,2]]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt; &lt;span class="example-io"&gt;3&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Constraints:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;code&gt;2 &amp;lt;= n == moveTime.length &amp;lt;= 50&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;2 &amp;lt;= m == moveTime[i].length &amp;lt;= 50&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;0 &amp;lt;= moveTime[i][j] &amp;lt;= 10&lt;sup&gt;9&lt;/sup&gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      <content:encoded><![CDATA[<p>There is a dungeon with <code>n x m</code> rooms arranged as a grid.</p>

<p>You are given a 2D array <code>moveTime</code> of size <code>n x m</code>, where <code>moveTime[i][j]</code> represents the <strong>minimum</strong> time in seconds when you can <strong>start moving</strong> to that room. You start from the room <code>(0, 0)</code> at time <code>t = 0</code> and can move to an <strong>adjacent</strong> room. Moving between adjacent rooms takes <em>exactly</em> one second.</p>

<p>Return the <strong>minimum</strong> time to reach the room <code>(n - 1, m - 1)</code>.</p>

<p>Two rooms are <strong>adjacent</strong> if they share a common wall, either <em>horizontally</em> or <em>vertically</em>.</p>

<p>&nbsp;</p>
<p><strong class="example">Example 1:</strong></p>

<div class="example-block">
<p><strong>Input:</strong> <span class="example-io">moveTime = [[0,4],[4,4]]</span></p>

<p><strong>Output:</strong> <span class="example-io">6</span></p>

<p><strong>Explanation:</strong></p>

<p>The minimum time required is 6 seconds.</p>

<ul>
	<li>At time <code>t == 4</code>, move from room <code>(0, 0)</code> to room <code>(1, 0)</code> in one second.</li>
	<li>At time <code>t == 5</code>, move from room <code>(1, 0)</code> to room <code>(1, 1)</code> in one second.</li>
</ul>
</div>

<p><strong class="example">Example 2:</strong></p>

<div class="example-block">
<p><strong>Input:</strong> <span class="example-io">moveTime = [[0,0,0],[0,0,0]]</span></p>

<p><strong>Output:</strong> <span class="example-io">3</span></p>

<p><strong>Explanation:</strong></p>

<p>The minimum time required is 3 seconds.</p>

<ul>
	<li>At time <code>t == 0</code>, move from room <code>(0, 0)</code> to room <code>(1, 0)</code> in one second.</li>
	<li>At time <code>t == 1</code>, move from room <code>(1, 0)</code> to room <code>(1, 1)</code> in one second.</li>
	<li>At time <code>t == 2</code>, move from room <code>(1, 1)</code> to room <code>(1, 2)</code> in one second.</li>
</ul>
</div>

<p><strong class="example">Example 3:</strong></p>

<div class="example-block">
<p><strong>Input:</strong> <span class="example-io">moveTime = [[0,1],[1,2]]</span></p>

<p><strong>Output:</strong> <span class="example-io">3</span></p>
</div>

<p>&nbsp;</p>
<p><strong>Constraints:</strong></p>

<ul>
	<li><code>2 &lt;= n == moveTime.length &lt;= 50</code></li>
	<li><code>2 &lt;= m == moveTime[i].length &lt;= 50</code></li>
	<li><code>0 &lt;= moveTime[i][j] &lt;= 10<sup>9</sup></code></li>
</ul>
]]></content:encoded>
      <guid isPermaLink="false">find-minimum-time-to-reach-last-room-i</guid>
      <pubDate>Wed, 07 May 2025 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>
